from math import sqrt
# 1) Описать функцию PowerA3(A, B), 
# вычисляющую третью степень числа A и возвращающую 
# ее в переменной B (A — входной, B — выходной параметр; 
# оба параметра являются целыми).
# С помощью этой функции найти третьи степени пяти данных чисел.


def powerA3(a):
    b = a ** 3 

    return b 


print(powerA3(3))
print(powerA3(4))
print(powerA3(7))
print(powerA3(2))
print(powerA3(6))

# 2) Описать функцию Mean(X, Y), вычисляющую среднее арифметическое 
# AMean = (X + Y)/2 и среднее геометрическое GMean = √(X * Y) 
# двух положительных чисел X и Y (X и Y — входные, 
# AMean и GMean — выходные параметры вещественного типа). 
# С помощью этой функции найти среднее арифметическое и среднее 
# геометрическое для пар (A, B), (A, C), (A, D), если даны A, B, C, D.


def mean(x,y):
    amean = (x + y) / 2
    gmean = sqrt(x * y)

    return amean, gmean


A, B, C, D = 4, 16, 9, 25

pairs = [(A, B), (A, C), (A, D)]
for x, y in pairs:
    amean, gmean = mean(x, y)
    print(amean, gmean)

# 3) Описать функцию InvertDigits(K), 
# меняющую порядок следования цифр целого положительного числа K на обратный. 
# С помощью этой процедуры поменять порядок следования цифр на обратный для 
# каждого из пяти данных целых чисел.


def InversDigit(k):
    k = str(k)
    k = k.replace("0","")
    k = k[::-1]

    return k


print(InversDigit(359))

# 4) Описать функцию Sw5ap(X, Y), меняющую содержимое переменных X и Y. 
# С ее помощью для данных переменных A, B, C, D последовательно поменять 
# содержимое следующих пар: A и B, C и D, B и C 
# и вывести новые значения A, B, C, D.


def sw5ap(x,y):
    x,y = y,x 

    return x,y


print(sw5ap(12,21))

# 5) Описать функцию Minmax(X, Y), записывающую в переменную X минимальное 
# из значений X и Y, а в переменную Y — максимальное из этих значений. 
# Используя четыре вызова этой функции, 
# найти минимальное и максимальное из данных чисел A, B, C, D.


def minmax(x,y):
    x = min(x,y)
    y = max(x,y)

    return x,y


                # Спец задачи

# 1) Учитывая, что наименьшее общее кратное 
# двух целых положительных чисел A и B равно A⋅
# (B/НОД(A, B)), где НОД(A, B) — наибольший 
# общий делитель A и B, и используя функцию NOD2 из задания Proc46, 
# описать функцию NOK2(A, B) целого типа, находящую наименьшее общее 
# кратное чисел A и B. С помощью NOK2 найти наименьшие общие кратные 
# пар (A, B), (A, C), (A, D), если даны числа A, B, C, D.


def nod(a,b):
    while b != 0:
        a,b = b, a % b
    return a 
    


def nod2(a,b):
    return nod(a,b)


def nok(a,b):
    r = a * (b / nod2(a,b))

    return r

A = 12
B = 15
C = 20
D = 25

lcm_AB = nok(A, B)
lcm_AC = nok(A, C)
lcm_AD = nok(A, D)

print(f"НОК(A, B) = {lcm_AB}")
print(f"НОК(A, C) = {lcm_AC}")
print(f"НОК(A, D) = {lcm_AD}")



# 2) Учитывая соотношение НОД(A, B, C) = НОД(НОД(A, B), C) 
# и используя функцию NOD2 из задания Proc46, описать функцию 
# NOD3(A, B, C) целого типа, находящую наибольший общий делитель 
# трех целых положительных чисел A, B, C. С помощью этой функции найти наибольшие 
# общие делители троек (A, B, C), (A, C, D) и (B, C, D), 
# если даны числа A, B, C, D.


def nod3(a,b,c):
    r = nod(nod(a,b),c)

    return r 


print(nod3(48,18,6))


# 3) Описать процедуру TimeToHMS(T, H, M, S), определяющую по времени 
# T (в секундах) содержащееся в нем количество часов H, минут M и секунд 
# S (T — входной, H, M и S — выходные параметры целого типа).
# Используя эту процедуру, найти количество часов, минут и секунд 
# для пяти данных отрезков времени T1,T2,...,T5


def timeToHMST(t):

    h = t // 3600
    m = (t % 3600) // 60         
    s = t % 60                  
    return h, m, s

print(timeToHMST(3600))

# 4) Описать процедуру IncTime(H, M, S, T), 
# которая увеличивает на T секунд время, заданное в часах H, 
# минутах M и секундах S (H, M и S - входные и выходные параметры, 
# T - входной параметр; все параметры - целые положительные). 
# Дано время (в часах H, минутах M, секундах S) и целое число T. 
# Используя процедуру IncTime, увеличить данное время на T секунд 
# и вывести новые значения H, M, S


def inc_time(h, m, s, t):
    total_seconds = h * 3600 + m * 60 + s + t

    new_h = (total_seconds // 3600) % 24  
    new_m = (total_seconds % 3600) // 60
    new_s = total_seconds % 60

    return new_h, new_m, new_s

print(inc_time(2,20,40,3000))
